name: CI

on: [push]

permissions:
  contents: read

jobs:
  workspace-ci:
    name: Workspace CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x, 18.x, 19.x, 20.x ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - run: corepack enable

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for a changelog entry
        if: ${{ github.ref != 'refs/heads/prepare-release' }}
        run: pnpm run changelog:status:ci

      - name: Run CI checks
        run: pnpm run all:ci

      - name: Report test coverage to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ github.token }}


  package-ci:
    name: Package CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-name: [ redux-to-recoil ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - run: corepack enable

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run CI checks for package
        run: |
          cd packages/${{ matrix.package-name }}
          pnpm run all:ci


  demos-ci:
    name: Demos CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo-name: [ todo-list ]

    steps:
      - uses: actions/checkout@v3

      - name: Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - run: corepack enable

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run CI checks for demo
        run: |
          cd demos/${{ matrix.demo-name }}
          pnpm run all:ci
